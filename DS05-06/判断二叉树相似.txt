// ConsoleApplication1.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include <iostream>

using namespace std;

class treenode;
class treenode {
public:
    char c;
    treenode(char nc);
    friend int check(treenode* node1, treenode* node2);
    treenode* Ln;
    treenode* Rn;

};

int main()
{
    char c;
    cin >> c;
    treenode tree1(c);
    cin >> c;
    treenode tree2(c);

    check(&tree1, &tree2);
    cout << "A与B相似" << endl;
    return 0;
}


treenode::treenode(char nc) {
    c = nc;
    if (nc == '#') {
        Ln = NULL;
        Rn = NULL;
    }
    else {
        //scanf("%c", nc);
        cin >> nc;
        Ln = new treenode(nc);
        //scanf("%c", nc);
        cin >> nc;
        Rn = new treenode(nc);
    }

}
int check(treenode* node1, treenode* node2) {
    //printf("正常进入比较\n");
    treenode* p1=node1;
    treenode* p2=node2;
    if (p1->c != '#' && p2->c != '#') {
        check(p1->Ln, p2->Ln);
        check(p1->Rn, p2->Rn);
    }
    else if (p1->c != p2->c) {
        printf("A与B不相似\n");
        exit(-1);
    }
    
    return 0;
}

// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门使用技巧: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
