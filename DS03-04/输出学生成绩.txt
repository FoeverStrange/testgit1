// ConsoleApplication1.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include <iostream>
#include <stack>
using namespace std;

stack<int> swap(stack<int>& s) {
    stack<int> stacks;
    while (!s.empty()) {
        stacks.push(s.top());
        s.pop();
    }
    return stacks;
}

int main()
{
    int N;
    int score;
    cin >> N;

    stack<int> stack1;  //60-
    stack<int> stack2;  //60+
    stack<int> stack3;  //100
    int i = 0;
    for (i = 0; i < N; i++) {
        cin >> score;
        if (score < 60) {
            stack1.push(score);
        }
        else if (score < 100) {
            stack2.push(score);
        }
        else {
            stack3.push(score);
        }
    }

    stack<int> stackf;
    stack<int> stackb;
    stack<int> stacka;

    if (!stack1.empty()) stackf = swap(stack1);
    if (!stack2.empty()) stackb = swap(stack2);
    if (!stack3.empty()) stacka = swap(stack3);

    cout << "60>x:";
    while (!stackf.empty())
    {
        cout << stackf.top() << " ";
        stackf.pop();
    }
    cout << endl;
    cout << "60<=x<100:";
    while (!stackb.empty())
    {
        cout << stackb.top() << " ";
        stackb.pop();
    }
    cout << endl;
    cout << "x>=100:";
    while (!stacka.empty())
    {
        cout << stacka.top() << " ";
        stacka.pop();
    }
    cout << endl;
    return 0;
    
    
}

// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门使用技巧: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
