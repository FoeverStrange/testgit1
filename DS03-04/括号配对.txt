// ConsoleApplication1.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include <iostream>
#include <string.h>
#include <stack>

const int N = 101;
using namespace std;


int main()
{
    char str[N];
    cin >> str;
    //cout << str << endl;
    int i = 0;
    int length = strlen(str);
    stack<char> stackc;
    int flagb = 0, flagm = 0, flags = 0;

    for (i = 0; i < length; i++) {
        if (str[i] == '{'  ) {
            stackc.push(str[i]);
            //flagb = 1;
        }
        else if (str[i] == '}' || str[i] == ']' || str[i] == ')') {
            stackc.push(str[i]);
        }
        else if (str[i] == '[' ) {
            stackc.push(str[i]);
            //flagm = 1;
        }
        else if (str[i] == '(' ) {
            stackc.push(str[i]);
            //flags = 1;
        }
    }

    char c;
    while (!stackc.empty()) {
        c = stackc.top();
        stackc.pop();
        if (c == '}') {
            flagb++;
            if (flagm > 0 || flags > 0) {
                cout << "括号不配对" << endl;
                return 0;
            }
            //continue;
        }
        else if (c == ']') {
            flagm++;
            if (flags > 0) {
                cout << "括号不配对" << endl;
                return 0;
            }
        }
        else if (c == ')') {
            flags++;
        }
        else if (c == '{') {
            flagb--;
            if (flagb < 0) {
                cout << "括号不配对" << endl;
                return 0;
            }
            if (flagm > 0 || flags > 0) {
                cout << "括号不配对" << endl;
                return 0;
            }
        }
        else if (c == '[') {
            flagm--;
            if (flagm < 0) {
                cout << "括号不配对" << endl;
                return 0;
            }
            if (flags > 0) {
                cout << "括号不配对" << endl;
                return 0;
            }
        }
        else if (c == '(') {
            flags--;
            if (flags < 0) {
                cout << "括号不配对" << endl;
                return 0;
            }
        }
    }
    cout << "括号配对" << endl;


}

// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门使用技巧: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
