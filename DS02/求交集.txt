// ConsoleApplication13.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include <iostream>

using namespace std;

class Node {
public:
    int data;
    Node* link;
    Node(Node* p = 0) {
        link = p;
    }
    Node(int& x, Node* p = 0) {
        link = p;
        data = x;
    }
    int friend operator == (Node n1, Node n2) {
        if (n1.data == n2.data) return 1;
        else return 0;
    }
    int friend operator > (Node n1, Node n2) {
        if (n1.data > n2.data) return 1;
        else return 0;
    }
    int friend operator < (Node n1, Node n2) {
        if (n1.data < n2.data) return 1;
        else return 0;
    }
};



int main()
{
    int num[101] = { 0 };
    char nc;
    int flag = 1;
    int i = 0;
    while (flag == 1) {
        scanf("%c", &nc);
        if (nc == ' ') i++;
        else if (nc == '\n') break;
        else {
            num[i] = num[i] * 10 + nc - '0';
        }
    }
    int j = 0;
    int count1 = i + 1;
   /* for (j = 0; j <= i; j++) {
        printf("%d ", num[j]);
    }*/
    Node Head1;
    Node* pn1;
    Node* npn1;
    Head1.link = new Node;
    pn1 = Head1.link;
    pn1->data = num[0];
    for (i = 1; i < count1; i++) {
        pn1->link = new Node;
        npn1 = pn1->link;
        npn1->data = num[i];
        pn1 = npn1;
    }
    pn1->link = NULL;

    pn1 = Head1.link;
    
    ////////////////////////count2
    int num2[101] = { 0 };
    i = 0;
    //printf("111111\n");
    while (flag == 1) {
        scanf("%c", &nc);
        if (nc == ' ') i++;
        else if (nc == '\n') break;
        else {
            num2[i] = num2[i] * 10 + nc - '0';
        }
    }
    //printf("22222\n");
    int count2 = i + 1;
    //cout << "count2==" << count2 << endl;
    Node Head2;
    Node* pn2;
    Node* npn2;
    Head2.link = new Node;
    pn2 = Head2.link;
    pn2->data = num2[0];
    for (i = 1; i < count2; i++) {
        pn2->link = new Node;
        npn2 = pn2->link;
        npn2->data = num2[i];
        pn2 = npn2;
    }
    pn2->link = NULL;
    //printf("33333\n");
    pn2 = Head2.link;
    //printf("%d\n",pn2->data); 
    
    //链表建立完成

    //开始进行链表比较
    pn1 = Head1.link;
    pn2 = Head2.link;
    i=0;j=0;
    while (i<count1&&j<count2) {
        if (pn1->data > pn2->data) {
        	//printf("i= %d  j=%d\n",i,j);
            pn2 = pn2->link;
            j++;
            continue;
        }
        else if (pn1->data < pn2->data) {
        	//printf("i= %d  j=%d\n",i,j);
            pn1 = pn1->link;
            i++;
            continue;
        }
        else {
        	//printf("i= %d  j=%d\n",i,j);
            cout << pn1->data << " ";
            pn1=pn1->link;
            pn2=pn2->link;
            i++;j++;
        }
        
    }
    cout << endl;
    return 0;
}

// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门使用技巧: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
